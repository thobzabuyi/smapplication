<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/variable-pie.js"></script>
 <div class="row">
  <div class="col-md-10 col-md-offset-1">
    <h1 class="text-center">Store</h1>
 <table class="table table-striped table-dark">
  <thead class="thead-light">
    <tr>
      <th><strong>Reg NO:</strong></th>
      <th><strong>Name:</strong></th>
      <th><strong>Address:</strong></th>
      <th><strong>Contact:</strong></th>
      <th colspan="5"></th>
    </tr>
  </thead>

  <tbody>
   <td><%= @store.storereg_no %></td>
   <td><%= @store.name %></td>
   <td><%= @store.address %></td>
   <td><%= @store.contact %></td>
   <%# if owner_in? %>
   <td><%= link_to 'Section', store_sections_path(@store) %></td>
   <td><%= link_to 'Add stock', store_records_path(@store) %></td>
   <% if manager_in? %>
   <td><%= link_to 'Manager', store_manager_path(current_user.store_id, current_user.id) %></td>
   <% end %>
   <% if can? :create, Manager %> 
   <td><%= link_to 'Manager', store_managers_path(@store) %></td>
   <td><%= link_to '<i class="fa fa-arrow-left"></i>'.html_safe, stores_path %></td>
   <% end %>
   <%# else %>
   <td><%#= link_to 'Section', store_sections_path(@store) %></td>
   <td><%#= link_to 'Manager', store_manager_path(current_user.id) %></td>
   <%# end %>
  </tbody>
</table>
</div>
</div>

<div class="row">
<div id="container1"  class="row col-md-6"></div>
<div id="container2" class="row col-md-6"></div>
<div id="container3" class="row col-md-6"></div>
<div id="container4" class="row col-md-6"></div>
</div>

<style type="text/css">
  #container1, #container2, #container3, #container4 {
  min-width: 300px;
  max-width: 500px;
  height: 516px;
  margin: 1em auto;
}

</style>


<script type="text/javascript">
  var prof = [];
    var prof1 = [];
  <% @sto.each do |store| %>
   prof.push(<%= store.profit %>);
   prof1.push("<%= store.name %>");
<% end %>
var cost_price = [];
  <% @cost.each do |cost| %>
   cost_price.push(<%= cost.costs %>);
   prof1.push("<%= cost.name %>");
<% end %>
var selling_price = [];
  <% @sell.each do |sale| %>
   selling_price.push(<%= sale.selling %>);
<% end %>

  var openings = [];
  <% @opening.each do |opens| %>
   openings.push(<%= opens.open_stock %>);
<% end %>
var closings = [];
  <% @closing.each do |close| %>
   closings.push(<%= close.closing_stock %>);
<% end %>
var solds = [];
  <% @sold.each do |sales| %>
   solds.push(<%= sales.sold_stock %>);
<% end %>

  
  Highcharts.chart('container1', {
    chart: {
        style: {
          fontSize: '11px',
          fontFamily: 'sans-serif',
        },
        type: 'column'
    },
    title: {
        text: 'Monthly Sales Revenue',
        style: {
                  fontWeight: 'bold',
                }
    },
    xAxis: {
        categories: prof1,
        crosshair: true,
        labels: {
                style: {
                    fontSize:'18px',
                    
                }
            }
    },
    yAxis: {
      labels: {
                style: {
                    fontSize:'16px',

                }
            },
        min: 0,
        title: {
            text: 'Amount (R)',
            style: {
                  fontWeight: 'bold',
                  fontSize:'16px',
                  fontFamily: 'sans-serif',
                    
                }
        }
    },
    tooltip: {
        headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
        pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
            '<td style="padding:0"><b>R {point.y:.1f}</b></td></tr>',
        footerFormat: '</table>',
        shared: true,
        useHTML: true
    },
    plotOptions: {
        column: {
            pointPadding: 0.2,
            borderWidth: 0
        }
    },
    series: [{
        name: 'Profit',
        data: prof

    }, {
        name: 'Cost Price',
        data: cost_price

    }, {
        name: 'Selling Price',
        data: selling_price

    }]
});

 Highcharts.chart('container2', {
    chart: {
        style: {
          fontSize: '11px',
          fontFamily: 'sans-serif',
        }
    },

    title: {
            text: 'Stock Analysis',
        style: {
                  fontWeight: 'bold',
                }
    },

    yAxis: {
        title: {
            text: 'Number of Stock',
            style: {
                    fontSize:'16px',
                    fontWeight: 'bold',

                }
        },
         labels: {
                style: {
                    fontSize:'16px',

                }
            }
    },

    xAxis: {
        categories: prof1,
        crosshair: true,
        labels: {
                style: {
                    fontSize:'18px',
                    
                }
            }
    },

    legend: {
        layout: 'vertical',
        align: 'right',
        verticalAlign: 'middle',
        style: {
                    fontSize:'18px',
                    
                }    
    },

  

    series: [{
        name: 'Opening Stock',
        data: openings

    }, {
        name: 'Closing Stock',
        data: closings

    }, {
        name: 'Sold Stock',
        data: solds

    }],

    responsive: {
        rules: [{
            condition: {
                maxWidth: 500
            },
            chartOptions: {
                legend: {
                    layout: 'horizontal',
                    align: 'center',
                    verticalAlign: 'bottom',
                style: {
                    fontSize:'16px',

                }
                },

            }
        }]
    }

});
</script>
<script type="text/javascript">
    var prof = [];
    var prof1 = [];
  <% @sto.each do |store| %>
   prof.push(<%= store.profit %>);
   prof1.push("<%= store.name %>");
<% end %>
var cost_price = [];
  <% @cost.each do |cost| %>
   cost_price.push(<%= cost.costs %>);
   prof1.push("<%= cost.name %>");
<% end %>
var selling_price = [];
  <% @sell.each do |sale| %>
   selling_price.push(<%= sale.selling %>);
<% end %>

  var openings = [];
  <% @opening.each do |opens| %>
   openings.push(<%= opens.open_stock %>);
<% end %>
var closings = [];
  <% @closing.each do |close| %>
   closings.push(<%= close.closing_stock %>);
<% end %>
var solds = [];
  <% @sold.each do |sales| %>
   solds.push(<%= sales.sold_stock %>);
<% end %>

var sec_name = [];
var sec = [];
var groups = [];
  <% @sec_group.each do |group| %>
   sec_name.push(<%= group.sec_name %>);
   
   sec.push("<%= group.name %>");
   groups.push(<%= group.group_name %>);

<% end %>


   

  Highcharts.chart('container3', {
    chart: {
        style: {
          fontSize: '11px',
          fontFamily: 'sans-serif',
        },
        type: 'variablepie'
    },

    title: {
        text: 'Number Of Groups / Items In Each Section',
        style: {
                  fontWeight: 'bold',
                }
    },
    tooltip: {
        headerFormat: '',
        pointFormat: '<span style="color:{point.color}">\u25CF</span> <b> {point.name}</b><br/>' +
            'Number of groups: <b>{point.y}</b><br/>' +
            'Number of items: <b>{point.z}</b><br/>'
    },
    plotOptions: {
series: {
dataLabels: {
      style: {
        fontSize: '18px',
        fontFamily: 'verdana, arial, helvetica, sans-serif'
      }
    }
  }
},
    series: [{
        minPointSize: 10,
        innerSize: '20%',
        zMin: 0,
        name: "Sections",
        data: [{
            name: sec[0],
            y: sec_name[0],
            z: groups[0]
        }, {
            name: sec[1],
            y: sec_name[1],
            z: groups[1]
        }, {
            name: sec[2],
            y: sec_name[2],
            z: groups[2]
        }]
    }]
});

</script>

<script type="text/javascript">
    var prof = [];
    var prof1 = [];
  <% @sto.each do |store| %>
   prof.push(<%= store.profit %>);
   prof1.push("<%= store.name %>");
<% end %>
var cost_price = [];
  <% @cost.each do |cost| %>
   cost_price.push(<%= cost.costs %>);
   prof1.push("<%= cost.name %>");
<% end %>
var selling_price = [];
  <% @sell.each do |sale| %>
   selling_price.push(<%= sale.selling %>);
<% end %>

  var openings = [];
  <% @opening.each do |opens| %>
   openings.push(<%= opens.open_stock %>);
<% end %>
var closings = [];
  <% @closing.each do |close| %>
   closings.push(<%= close.closing_stock %>);
<% end %>
var solds = [];
  <% @sold.each do |sales| %>
   solds.push(<%= sales.sold_stock %>);
<% end %>
    function renderIcons() {

    // Move icon
    if (!this.series[0].icon) {
        this.series[0].icon = this.renderer.path(['M', -8, 0, 'L', 8, 0, 'M', 0, -8, 'L', 8, 0, 0, 8])
            .attr({
                'stroke': '#303030',
                'stroke-linecap': 'round',
                'stroke-linejoin': 'round',
                'stroke-width': 2,
                'zIndex': 10
            })
            .add(this.series[2].group);
    }
    this.series[0].icon.translate(
        this.chartWidth / 2 - 10,
        this.plotHeight / 2 - this.series[0].points[0].shapeArgs.innerR -
            (this.series[0].points[0].shapeArgs.r - this.series[0].points[0].shapeArgs.innerR) / 2
    );

    // Exercise icon
    if (!this.series[1].icon) {
        this.series[1].icon = this.renderer.path(
            ['M', -8, 0, 'L', 8, 0, 'M', 0, -8, 'L', 8, 0, 0, 8,
                'M', 8, -8, 'L', 16, 0, 8, 8]
            )
            .attr({
                'stroke': '#ffffff',
                'stroke-linecap': 'round',
                'stroke-linejoin': 'round',
                'stroke-width': 2,
                'zIndex': 10
            })
            .add(this.series[2].group);
    }
    this.series[1].icon.translate(
        this.chartWidth / 2 - 10,
        this.plotHeight / 2 - this.series[1].points[0].shapeArgs.innerR -
            (this.series[1].points[0].shapeArgs.r - this.series[1].points[0].shapeArgs.innerR) / 2
    );

    // Stand icon
    if (!this.series[2].icon) {
        this.series[2].icon = this.renderer.path(['M', 0, 8, 'L', 0, -8, 'M', -8, 0, 'L', 0, -8, 8, 0])
            .attr({
                'stroke': '#303030',
                'stroke-linecap': 'round',
                'stroke-linejoin': 'round',
                'stroke-width': 2,
                'zIndex': 10
            })
            .add(this.series[2].group);
    }

    this.series[2].icon.translate(
        this.chartWidth / 2 - 10,
        this.plotHeight / 2 - this.series[2].points[0].shapeArgs.innerR -
            (this.series[2].points[0].shapeArgs.r - this.series[2].points[0].shapeArgs.innerR) / 2
    );
}

Highcharts.chart('container4', {

    chart: {
      style: {
          fontSize: '11px',
          fontFamily: 'sans-serif',
        },
        type: 'solidgauge',
        height: '110%',
        events: {
            render: renderIcons
        }
    },

    title: {
        text: 'Activity',
        style: {
            fontSize: '24px',
            fontWeight: 'bold'
        }
    },

    tooltip: {
        borderWidth: 0,
        backgroundColor: 'none',
        shadow: false,
        style: {
            fontSize: '16px'
        },
        pointFormat: '{series.name}<br><span style="font-size:2em; color: {point.color}; font-weight: bold">{point.y}</span>',
        positioner: function (labelWidth) {
            return {
                x: (this.chart.chartWidth - labelWidth) / 2,
                y: (this.chart.plotHeight / 2) + 15
            };
        }
    },

    pane: {
        startAngle: 0,
        endAngle: 360,
        background: [{
            outerRadius: '112%',
            innerRadius: '88%',
            backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[0])
                .setOpacity(0.3)
                .get(),
            borderWidth: 0
        }, {
            outerRadius: '87%',
            innerRadius: '63%',
            backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[1])
                .setOpacity(0.3)
                .get(),
            borderWidth: 0
        }, {
            outerRadius: '62%',
            innerRadius: '38%',
            backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[2])
                .setOpacity(0.3)
                .get(),
            borderWidth: 0
        }]
    },

    yAxis: {
        min: 0,
        max: 100,
        lineWidth: 0,
        tickPositions: []
    },

    plotOptions: {
        solidgauge: {
            dataLabels: {
                enabled: false
            },
            linecap: 'round',
            stickyTracking: false,
            rounded: true
        }
    },

    series: [{
       name: 'Opening Stock',
        data: [{
            color: Highcharts.getOptions().colors[0],
            radius: '112%',
            innerRadius: '88%',
            y: openings[0]
        }]
    }, {
        name: 'Closing Stock',
        data: [{
            color: Highcharts.getOptions().colors[1],
            radius: '87%',
            innerRadius: '63%',
            y: closings[0]
        }]
    }, {
        name: 'Sold Stock',
        data: [{
            color: Highcharts.getOptions().colors[2],
            radius: '62%',
            innerRadius: '38%',
            y: solds[0]
        }],
    }],
});

</script>
